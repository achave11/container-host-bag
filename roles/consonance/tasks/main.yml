---
- name: Get Architecture3 jar file # This needs to be updated to the latest release of consonance dependencies!
  get_url: url=https://www.dropbox.com/s/giy9ayxlvpoohiz/consonance-arch-2.0-alpha.11-SNAPSHOT.jar?dl=1 dest=/home/ubuntu/consonance-arch-{{ consonance_arch_version }}.jar
  #get_url: url=https://seqwaremaven.oicr.on.ca/artifactory/simple/seqware-release/io/consonance/consonance-arch/{{ consonance_arch_version }}/consonance-arch-{{ consonance_arch_version }}.jar dest=/home/ubuntu/consonance-arch-{{ consonance_arch_version }}.jar

# The "endless" flag for the worker is not a true/false, it's "--endless" or "".
- name: Conditionally turn endless_worker_flag on
  set_fact: endless_worker_flag=" --endless "
  when: endless_worker is defined and endless_worker

- name: Conditionally turn endless_worker_flag off
  set_fact: endless_worker_flag=""
  when: endless_worker is not defined or not endless_worker

- name: Get kill-worker script
  template: src=kill_worker_daemon.j2 dest=/home/ubuntu/kill_worker_daemon.sh

- name: Get run-worker script
  template: src=run_worker_daemon.j2 dest=/home/ubuntu/run_worker_daemon.sh

- name: queueHost is
  debug: var={{ queueHost }}

- name: Template workerConfig
  template: src=workerConfig.j2 dest=/home/ubuntu/workerConfig.ini owner=ubuntu

- name: Create .seqware directory
  file: path=/home/ubuntu/.seqware state=directory owner=ubuntu
  when: seqware_use_custom_settings is defined and seqware_use_custom_settings

- name: Copy base custom seqware settings
  copy: src=../files/seqware_settings.ini dest=/home/ubuntu/.seqware/settings owner=ubuntu
  when: seqware_use_custom_settings is defined and seqware_use_custom_settings

- name: Uncomment the custom seqware settings, IF you've requested that.
  replace: dest=/home/ubuntu/workerConfig.ini regexp='^(\#seqware-)(.*)$' replace='seqware-\2' backup=yes owner=ubuntu
  when: seqware_use_custom_settings is defined and seqware_use_custom_settings

- name: Copy over keys/credentials for workers.
  copy: src={{ item }} dest=/home/ubuntu/.aws owner=ubuntu
  with_fileglob:
#    - /home/ubuntu/.gnos/* // Ansible can find this paths
    - /root/.aws/*

- name: Install avro
  pip: name=avro executable=pip2 version=1.8.1

- name: Install schema-salad
  pip: name=schema-salad executable=pip2 version=1.14.20160708181155

- name: Install cwltool
  pip: name=cwltool executable=pip2 version=1.0.20160712154127

- name: Copy over patched job files
  copy: src=roles/consonance/files/job_new.py dest=/usr/local/lib/python2.7/dist-packages/cwltool/job.py owner=root

- name: Copy over patched process files
  copy: src=roles/consonance/files/process_new.py dest=/usr/local/lib/python2.7/dist-packages/cwltool/process.py owner=root

- name: Copy over patched main files
  copy: src=roles/consonance/files/main_new.py dest=/usr/local/lib/python2.7/dist-packages/cwltool/main.py owner=root

- name: Delete compiled job files
  command: rm -f /usr/local/lib/python2.7/dist-packages/cwltool/job.pyc

- name: Delete compiled process files
  command: rm -f /usr/local/lib/python2.7/dist-packages/cwltool/process.pyc

- name: Delete compiled main files
  command: rm -f /usr/local/lib/python2.7/dist-packages/cwltool/main.pyc

# install dcc-storage

#- name: Create required directory
#  become_user: root
#  file: path=/icgc/dcc-storage/ owner=ubuntu state=directory
#
#- name: Create working directory
#  become_user: root
#  file: path=/icgc/dcc-storage/archive owner=ubuntu state=directory
#
#- name: Get file
#  get_url: url=https://seqwaremaven.oicr.on.ca/artifactory/dcc-release/org/icgc/dcc/dcc-storage-client/{{ dcc_storage_version }}/dcc-storage-client-{{ dcc_storage_version }}-dist.tar.gz dest=/icgc/dcc-storage/archive
#
#- name: Unarchive the dcc tool
#  unarchive: src=/icgc/dcc-storage/archive/dcc-storage-client-{{ dcc_storage_version }}-dist.tar.gz dest=/icgc/dcc-storage/archive  copy=no
#
#- name: Copy files extracted files into correct location
#  shell: creates=/icgc/dcc-storage/bin/dcc-storage-client mv /icgc/dcc-storage/archive/dcc-storage-client-{{ dcc_storage_version }}/* /icgc/dcc-storage/
#
#- name: Template shell script
#  template: src=dcc-storage-client.j2 dest=/icgc/dcc-storage/bin/dcc-storage-client owner=ubuntu

# end dcc-storage

- name: Run worker as daemon
  become_user: root
  shell: chdir=/home/ubuntu nohup bash /home/ubuntu/run_worker_daemon.sh &
#
#TASK [consonance : Copy over keys/credentials for workers.] ********************
#failed: [i-096caf7adf73b18cb] (item=/root/.aws/config) => {"checksum": "551d00d19e9a805c5476299bce5712b4c395766a", "failed": true, "item": "/root/.aws/config", "msg": "Destination directory /root/.aws does not exist"}
#	to retry, use: --limit @/container-host-bag/install.retry
#
#PLAY RECAP *********************************************************************
#i-096caf7adf73b18cb        : ok=39   changed=25   unreachable=0    failed=1
#
#04:30:51.316 [pool-1-thread-2] INFO  i.c.youxia.deployer.Deployer - Caught an Ansible non-zero exit code for: ansible-playbook -i /tmp/ansible2150257973263758792.inventory /container-host-bag/install.yml -e @/container-host-bag/example_params.json
#04:30:51.317 [pool-1-thread-2] ERROR i.c.a.c.ContainerProvisionerThreads$ProvisionVMs - Youxia deployer threw the following exception
#java.lang.RuntimeException: org.apache.commons.exec.ExecuteException: Process exited with an error: 2 (Exit value: 2)
#	at io.cloudbindle.youxia.deployer.Deployer.runAnsibleActual(Deployer.java:710)
#	at io.cloudbindle.youxia.deployer.Deployer.prepAnsibleForAWS(Deployer.java:584)
#	at io.cloudbindle.youxia.deployer.Deployer.runDeploymentForAWS(Deployer.java:749)
#	at io.cloudbindle.youxia.deployer.Deployer.runDeployment(Deployer.java:732)
#	at io.cloudbindle.youxia.deployer.Deployer.main(Deployer.java:1008)
#	at io.consonance.arch.containerProvisioner.ContainerProvisionerThreads$ProvisionVMs.call(ContainerProvisionerThreads.java:311)
#	at io.consonance.arch.containerProvisioner.ContainerProvisionerThreads$ProvisionVMs.call(ContainerProvisionerThreads.java:196)
#	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
#	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
#	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
#	at java.lang.Thread.run(Thread.java:748)
#Caused by: org.apache.commons.exec.ExecuteException: Process exited with an error: 2 (Exit value: 2)
#	at org.apache.commons.exec.DefaultExecutor.executeInternal(DefaultExecutor.java:404)
#	at org.apache.commons.exec.DefaultExecutor.execute(DefaultExecutor.java:166)
#	at io.cloudbindle.youxia.deployer.Deployer.runAnsibleActual(Deployer.java:696)
#	... 10 common frames omitted
